% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/window_gd.R
\name{window_general}
\alias{window_general}
\title{General function for making moving window maps}
\usage{
window_general(
  x,
  coords,
  lyr,
  stat,
  wdim = 3,
  fact = 0,
  rarify = FALSE,
  rarify_n = 2,
  rarify_nit = 10,
  min_n = 2,
  fun = mean,
  L = "nvariants",
  rarify_alleles = TRUE,
  parallel = FALSE,
  ncores = NULL
)
}
\arguments{
\item{x}{genetic data (\emph{note:} order matters! the coordinate and genetic data should be in the same order, there are currently no checks for this.)}

\item{coords}{two-column matrix or data.frame representing x (longitude) and y (latitude) coordinates of samples}

\item{lyr}{RasterLayer to slide the window across}

\item{stat}{moving window statistic to calculate (can either be \code{pi} for nucleotide diversity (\code{x} must be a dosage matrix), \code{het} for average heterozygosity across all loci (\code{x} must be a heterozygosity matrix) , "allelic.richness" for average allelic richness across all loci (\code{x} must be a \code{genind} type object), "biallelic.richness" to get average allelic richness across all loci for a biallelic dataset (\code{x} must be a dosage matrix; this option faster than "allelic.richness"). If x is a vector, \code{stat} can also be \code{mean}, \code{sd}, or \code{var}).}

\item{wdim}{dimensions (height x width) of window, if only one value is provided a square window is created (defaults to 3 x 3 window)}

\item{fact}{aggregation factor to apply to the RasterLayer (defaults to 0; \emph{note:} increasing this value reduces computational time)}

\item{rarify}{if rarify = TRUE, rarefaction is performed (defaults to FALSE)}

\item{rarify_n}{if rarify = TRUE, number of points to use for rarefaction (defaults to 2)}

\item{rarify_nit}{if rarify = TRUE, number of iterations to use for rarefaction (defaults to 5)}

\item{min_n}{min number of samples to use in calculations (any focal cell with a window containing less than this number of samples will be assigned a value of NA; equal to rarify_n if rarify = TRUE, otherwise defaults to 2)}

\item{fun}{function to use to summarize data in window (defaults to mean)}

\item{L}{for calculating pi, L argument in \link[hierfstat]{pi.dosage} function. Return the average nucleotide diversity per nucleotide given the length L of the sequence. The wingen defaults is L = "nvariants" which sets L to the number of variants in the VCF. If L = NULL, returns the sum over SNPs of nucleotide diversity (note: L = NULL is the \link[hierfstat]{pi.dosage} default which wingen does not to use).}

\item{rarify_alleles}{for calculating biallelic.richness, whether to perform rarefaction of allele counts as in \link[hierfstat]{allelic.richness} (defaults to TRUE)}

\item{parallel}{whether to parallelize the function (defaults to FALSE)}

\item{ncores}{if parallel = TRUE, number of cores to use for parallelization (defaults to total available number of cores minus 1)}
}
\value{
RasterStack that includes a raster of genetic diversity and a raster of the number of samples within the window for each cell
}
\description{
Generate a continuous raster map using moving windows. While \link[wingen]{window_gd} is built specifically for making moving window maps of genetic divesity,
\code{window_general} can be used to make moving window maps from different data inputs. Unlike \code{window_gd}, \code{window_general} will not convert your data into
the correct format for calculations of different diversity metrics. To calculate \code{pi} or \code{biallelic_richness}, \code{x} must be a dosage matrix with values of 0, 1, or 2 To calculate
\code{heterozygosity}, \code{x} must be a heterozygosity matrix where values of 0 = homozygosity and values of 1 = heterozygosity. To calculate \code{allelic_richness}, \code{x} must be a \code{genind} type object.
In addition, users can set \code{x} to a vector and create moving window maps with any function that can be applied to a vector and will take \code{na.rm = TRUE} (e.g. \code{stat = mean}, \code{var}, \code{sum}, etc.)
}
