% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/krig_gd.R
\name{krig_gd}
\alias{krig_gd}
\title{Raster interpolation using 'autoKrige'}
\usage{
krig_gd(
  r,
  grd = NULL,
  indices = 1,
  coords = NULL,
  xy = FALSE,
  resample = FALSE,
  agg_grd = NULL,
  disagg_grd = NULL,
  agg_r = NULL,
  disagg_r = NULL,
  resample_first = TRUE,
  n_cell = 10000
)
}
\arguments{
\item{r}{RasterLayer or RasterStack}

\item{grd}{object to create grid for kriging, can be RasterLayer, SpatialPointsDataFrame, or a gridded object as defined by 'sp'. If undefined, will use \code{r} to create a grid.}

\item{indices}{integer indices of layers in raster stack to krige (defaults to 1, i.e. the first layer)}

\item{coords}{if provided, kriging will occur based only on values at these coordinates}

\item{xy}{whether to co-krige with x and y (~x+y)}

\item{resample}{whether to resample grd or r. Set to "r" to resample r to grd Set to "grd" to resample grd to r (defaults to FALSE)}

\item{agg_grd}{factor to use for aggregation of grd, if provided (this will decrease the resolution of the final kriged raster; defaults to NULL)}

\item{disagg_grd}{factor to use for disaggregation of grd, if provided (this will increase the resolution of the final kriged raster; defaults to NULL)}

\item{agg_r}{factor to use for aggregation of r, if provided (this will decrease the number of points used in the kriging model; defaults to NULL)}

\item{disagg_r}{factor to use for disaggregation, of r if provided (this will increase the number of points used in the kriging model; defaults to NULL)}

\item{resample_first}{if aggregation or disaggregation is used in addition to resampling, whether to resample before (resample_first = TRUE) or after (resample_first = FALSE) aggregation/disaggregation (defaults to TRUE)}

\item{n_cell}{number of cells to interpolate across if SpatialPointsDataFrame is provided for \code{grd}}
}
\value{
RasterLayer or RasterStack
}
\description{
Raster interpolation using 'autoKrige'
}
\examples{
library("raster")
load_mini_ex()
wpi <- window_gd(mini_vcf, mini_coords, mini_lyr, nloci = 10, rarify = TRUE)
kpi <- krig_gd(wpi, mini_lyr)
plot_gd(kpi, main = "Kriged Pi")
plot_count(kpi)

}
