[{"path":"/articles/wingen-vignette.html","id":"wingen","dir":"Articles","previous_headings":"","what":"Wingen","title":"wingen-vignette","text":"","code":"library(wingen) library(raster) library(vcfR) library(viridis) library(foreach) library(doParallel)"},{"path":"/articles/wingen-vignette.html","id":"background","dir":"Articles","previous_headings":"Wingen","what":"Background","title":"wingen-vignette","text":"short, wingen uses moving window approach create maps genetic diversity. method rationale described package paper: [CITATION] , describe wingen paper follows: \"(wingen) creates continuous maps pi, heterozygosity, allelic richness standard genotypic spatial data using moving window approach. approach, landscape divided cells genetic diversity calculated samples falling within window (.e. box) around cell (Fig 1). way, neighborhood around cell, defined window dimensions, treated population estimating genetic diversity. output map cell represents genetic diversity neighborhood around . neighborhoods can contain different numbers samples, provide options rarefaction control effects sample size differences measures genetic diversity. also include options spatial interpolation create smoother genetic diversity surfaces moving window maps. , use type interpolation known kriging, estimates values unknown points using spatial model known variogram. Using kriging based interpolation allows smoothing discontinuities created moving window. Finally, original moving window map well kriged surfaces can masked exclude regions sampled undersampled. Altogether, wingen provides tools create informative maps genetic diversity can used conservation population genetic analyses.\"","code":""},{"path":"/articles/wingen-vignette.html","id":"example","dir":"Articles","previous_headings":"Wingen","what":"Example","title":"wingen-vignette","text":"demonstrate wingen works use subset data simulation example package paper (Bishop et al., 202X). simulations created using Geonomics (Terasaki Hart et al., 2022) generate realistic landscape genomic dataset. simulation, spatial variation genetic diversity produced varying population size gene flow across landscape via heterogenous carrying capacity conductance surfaces. surfaces based example digital elevation model Tolkien’s Middle Earth produced Center Geospatial Analysis William & Mary (Robert, 2020).","code":""},{"path":"/articles/wingen-vignette.html","id":"load-middle-earth-example","dir":"Articles","previous_headings":"Wingen > Example","what":"Load middle earth example","title":"wingen-vignette","text":"smaller middle earth example dataset used example contains three objects loaded load_middle_earth_ex: lotr_vcf - vcfR object containing genetic data lotr_coords - dataframe object containing sample coordinates lotr_lyr - raster object landscape (higher values indicate greater connectivity/carrying capacity) users don’t raster layer landscape can generate one coordinates using coords_to_raster function. resolution raster can either tuned agg (aggregation) disagg (disaggregate) arguments defined using res argument. res argument can either single value (e.g. 0.00833) vector two values x y resolutions.","code":"load_middle_earth_ex() #>  #> ------------- middle earth example ------------- #>   #> Objects loaded:  #> *lotr_vcf* vcfR object (100 loci x 100 samples)  #> *lotr_coords* dataframe with x and y coordinates  #> *lotr_lyr* middle earth RasterLayer (100 x 100)  #>  #> ------------------------------------------------ #>  #>   # Genetic data lotr_vcf #> ***** Object of Class vcfR ***** #> 100 samples #> 1 CHROMs #> 100 variants #> Object size: 0.1 Mb #> 0 percent missing data #> *****        *****         *****  # Coordinates head(lotr_coords) #>             x         y #> 538  88.73547 -66.61610 #> 1397 78.50479 -23.24048 #> 1200 14.32163 -25.99363 #> 952  89.86373 -65.49860 #> 1177 45.42427 -23.13054 #> 383  98.89395 -13.88943  # Raster data lotr_lyr #> class      : RasterLayer  #> dimensions : 100, 100, 10000  (nrow, ncol, ncell) #> resolution : 1, 1  (x, y) #> extent     : 0, 100, -100, 0  (xmin, xmax, ymin, ymax) #> crs        : NA  #> source     : memory #> names      : layer  #> values     : 0, 1  (min, max)  # Map of data plot(lotr_lyr, col = magma(100), axes = FALSE, box = FALSE) points(lotr_coords, col = mako(1, begin = 0.8), pch = 3, cex = 0.5) ex_raster1 <- coords_to_raster(lotr_coords, buffer = 1, plot = TRUE) ex_raster2 <- coords_to_raster(lotr_coords, buffer = 1, agg = 2, plot = TRUE) ex_raster3 <- coords_to_raster(lotr_coords, buffer = 1, disagg = 4, plot = TRUE) ex_raster4 <- coords_to_raster(lotr_coords, buffer = 1, res = 10, plot = TRUE)"},{"path":"/articles/wingen-vignette.html","id":"workflow","dir":"Articles","previous_headings":"Wingen","what":"Workflow","title":"wingen-vignette","text":"workflow wingen uses three main functions: window_gd generate moving window maps genetic diversity krige_gd use kriging interpolate sliding window maps mask_gd mask areas maps (1) (2) (e.g. exclude undersampled areas)","code":""},{"path":"/articles/wingen-vignette.html","id":"run-sliding-window-calculations","dir":"Articles","previous_headings":"Wingen > Workflow","what":"Run sliding window calculations","title":"wingen-vignette","text":"main arguments window_gd : vcf - object type vcf genotypic data. order file matters! coordinate genetic data order, currently checks . coords - matrix dataframe two columns representing coordinates samples. first column x (.e. Longitude) second y (.e. Latitude). lyr - RasterLayer window move across create final map. cases, take form raster study area. stat - genetic diversity summary statistic calculate. provide options calculating nucleotide diversity (pi), average allelic richness, average heterozygosity. Currently, option calculate nucleotide diversity works bi-allelic data. addition, two functions calculating allelic richness: (1) “allelic.richness” uses allelic.richness function “hierfstat” package (2) “biallelic.richness” provides much faster calculation allelic richness, works bi-allelic data. fact - decrease computational time, provide option aggregate input raster layer factor defined using “fact” argument. Increasing “fact” decrease number cells thereby decrease number calculations, trade-decreasing resolution output layers. Users keep mind increase “fact” may simultaneously want decrease “wdim” since proportion landscape covered neighborhood matrix otherwise increase substantially. wdim - used create neighborhood matrix moving window based dimensions provided. argument can either set one value (e.g. 3) create square window (e.g. 3 x 3), two values can provided create rectangular window (e.g. 3 x 5). encourage users experiment different values “wdim” determine sensitivity results parameter. Ideally, “wdim” set knowledge study system mind (e.g. dispersal patterns /neighborhood size study organism). preview window size relative landscape can obtained using preview_window function rarify - Users option perform rarefaction setting “rarify” argument TRUE. “rarify = TRUE”, users define “rarify_n” number samples rarify “rarify_nit” number iterations rarefaction (e.g. rarify_n = 4 rarify_nit = 5, sample set, four random samples drawn five times). window moves across landscape, three things can occur based number samples window: (1) number samples less “rarify_n”, genetic diversity calculated raster value “NA” assigned, (2) number samples equal “rarify_n” genetic diversity statistic calculated samples, (3) number samples greater “rarify_n,” rarefaction implemented set samples subsampled “rarify_nit” times size “rarify_n” mean (another summary statistic set using “fun”) “rarify_nit” iterations used. suggest users select “rarify_n” “rarify_nit” number possible ways choose “rarify_n” sample size “rarify_n” plus one greater “rarify_nit” order always “rarify_nit” number unique combinations size “rarify_n”. “rarify = FALSE”, rarefaction performed steps (1) (2) occur : (1) number samples window less “min_n” argument, genetic diversity calculated raster value “NA” assigned (2) number samples equal greater “min_n” genetic diversity statistic calculated samples. highly encourage users perform rarefaction genetic diversity statistics sensitive sample size. main benefit performing rarefaction decreased computational time, however worth trade-inaccuracy unless confident effect rarefaction performing analysis without rarefaction. parallel - order increase computational efficiency, provide option parallelization setting “parallel” argument TRUE. Parallelization performed using “foreach” “doParallel” R packages. perform parallelization Windows operating system cluster must first initialized using lines code, process describe later . running window_gd users can preview moving window counts within cell raster get sense big window density counts looks like across landscape. provide raster layer (lotr_lyr), coordinates (lotr_coords), window dimensions (5), aggregation factor (3), minimum sample number (min_n). Min_n used mask sample count layer show much landscape excluded due low sample counts (note: min_n equivalent rarify_n rarefaction used)  Next, run moving window function vcf, coords, raster layer. set parameters calculate pi, use window size 5 x 5, aggregation factor 3, rarefaction rarefaction size 2 (minimum sample size 2) 5 iterations. nloci argument used calculation pi. nloci=NULL (default), function returns sum SNPs nucleotide diversity Otherwise, function returns average nucleotide diversity per nucleotide given length nloci sequence. plot genetic diversity layer (first layer produced RasterStack) sample counts layer (second stack)","code":"preview_gd(lotr_lyr,            lotr_coords,            wdim = 5,             fact = 3,             sample_count = TRUE,             min_n = 2) wgd <- window_gd(lotr_vcf,           lotr_coords,           lotr_lyr,           stat = \"pi\",           wdim = 5,           fact = 3,           rarify = TRUE,           rarify_n = 2,           rarify_nit = 5,           nloci = 100) #> Loading required namespace: adegenet  # the plot_gd function plots the genetic diversity layer plot_gd(wgd, main = \"Window pi\") # the plot_count function plots the sample count layer plot_count(wgd, main = \"Window sample counts\")"},{"path":"/articles/wingen-vignette.html","id":"krige-results","dir":"Articles","previous_headings":"Wingen > Workflow","what":"Krige results","title":"wingen-vignette","text":"produce smoother maps genetic diversity, provide function krig_gd() creates spatially interpolated raster moving window raster produced window_gd(). function uses autoKrige() function R package “automap” perform kriging moving window raster using automatically generated variogram. Note RasterStack window_gd() including genetic diversity layer sample count layer can used generate kriged maps genetic diversity sample count. Kriging performed first transforming sliding window layer set coordinates corresponding genetic diversity (sample count) values interpolating using coordinates across grid provided. , important keep mind coordinates sliding window raster grid align. resolution sliding window raster much less grid, fewer points interpolation can result grid-like artifacts kriging. deal issue, users can either (1) resample sliding window raster layers grid layers resolution using “resample” argument (2) manually disaggregate aggregate either sliding window grid layers using “r_agg”, “r_disagg”, “grd_agg”, “grd_disagg” arguments. Generally, users want smoother resulting surface, higher resolution grid layer used (can accomplished using “grd_disagg” argument disaggregate grid layer). resampling, aggregation, disaggregation options currently work object provided create grid RasterLayer. Keep mind increasing resolution sliding window layer (.e. either resampling disaggregating) can increase computational time substantially increases number coordinates used kriging. also case increasing resolution grid layer, however lesser extent. run function provide RasterStack output window_gd, indices layers want krige (case genetic diversity (1) sample count (2) layers), raster layer interpolate across. also disaggregate original layer factor two get smoother output surface (users play around parameter). output function RasterStack kriged input layers.","code":"# note: this step can take a little while kgd <- krig_gd(wgd, indices = 1:2, lotr_lyr, disagg_grd = 2) #> [using ordinary kriging] #> [using ordinary kriging]  plot_gd(kgd, main = \"Kriged pi\") plot_count(kgd, main = \"Kriged sample counts\")"},{"path":"/articles/wingen-vignette.html","id":"mask-results","dir":"Articles","previous_headings":"Wingen > Workflow","what":"Mask results","title":"wingen-vignette","text":"Next, mask resulting kriged layers. Masking can performed using variety methods. example, can mask using carrying capacity layer exclude areas carrying capacity less 0.01 (analagous might using species distribution model habitat suitability model exclude areas probability presence low):  also mask layer using sample counts layer produced wingen exclude undersampled areas (case areas kriged value less 1):  Another nice visualization addition add “background” plots form RasterLayer spatial object (e.g. country boundary) can help provide geographic context:","code":"mgd <- mask_gd(kgd, lotr_lyr, minval = 0.01)  plot_gd(mgd, main = \"Kriged & masked pi\") mgd <- mask_gd(kgd[[\"pi\"]], kgd[[\"sample_count\"]], minval = 1)  plot_gd(mgd, main = \"Kriged & masked pi\") # Create a \"range map\" for this species by masking areas of very low suitability range_map <- lotr_lyr range_map[range_map < 0.01] <- NA  plot_gd(mgd, bkg = range_map, main = \"Kriged & masked pi\")"},{"path":"/articles/wingen-vignette.html","id":"parallelization","dir":"Articles","previous_headings":"Wingen","what":"Parallelization","title":"wingen-vignette","text":"increase computational speed users can perform window_gd calculations parallelization. windows machine first need initate cluster , shown :","code":"cores <- 5 cl <- makeCluster(cores) registerDoParallel(cl)  system.time( wgd <- window_gd(lotr_vcf,           lotr_coords,           lotr_lyr,           stat = \"pi\",           fact = 3,           wdim = 5,           rarify_n = 2,           rarify_nit = 5,           rarify = TRUE,           nloci = 1000,            parallel = TRUE) )  stopCluster(cl)"},{"path":"/articles/wingen-vignette.html","id":"other-genetic-diversity-metrics","dir":"Articles","previous_headings":"Wingen","what":"Other genetic diversity metrics","title":"wingen-vignette","text":"addition pi, users can calculate heterozygosity (“het”), allelic richness (either using “biallelic.richness” (faster works biallelic data) “allelic.richness”)","code":"pi_wgd <- window_gd(lotr_vcf,           lotr_coords,           lotr_lyr,           stat = \"pi\",           fact = 3,           wdim = 5,           rarify_n = 2,           rarify_nit = 5,           rarify = TRUE,           nloci = 1000)  het_wgd <- window_gd(lotr_vcf,           lotr_coords,           lotr_lyr,           stat = \"het\",           fact = 3,           wdim = 5,           rarify_n = 2,           rarify_nit = 5,           rarify = TRUE)  AR_wgd <- window_gd(lotr_vcf,           lotr_coords,           lotr_lyr,           stat = \"biallelic.richness\",           rarify_n = 2,           rarify_nit = 5,           fact = 3,           wdim = 5,           rarify = TRUE) plot_gd(pi_wgd, bkg = range_map, main = \"Pi\") plot_gd(het_wgd, bkg = range_map, main = \"Heterozygosity\") plot_gd(AR_wgd, bkg = range_map, main = \"Allelic Richness\")"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anusha Bishop. Author, maintainer. Anne Chambers. Author. Ian Wang. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bishop , Chambers , Wang (2022). wingen: Sliding Window Maps Genetic Diversity. R package version 0.0.0.9000.","code":"@Manual{,   title = {wingen: Sliding Window Maps of Genetic Diversity},   author = {Anusha Bishop and Anne Chambers and Ian Wang},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"wingen-","dir":"","previous_headings":"","what":"Sliding Window Maps of Genetic Diversity","title":"Sliding Window Maps of Genetic Diversity","text":"! alt text (https://codecov.io/gh/AnushaPB/wingen/branch/main/graph/badge.svg?token=P4Z35HFR4Y)](https://codecov.io/gh/AnushaPB/wingen) ](https://github.com/AnushaPB/wingen/actions/workflows/test-coverage.yaml) ](https://img.shields.io/badge/license-MIT-blue) Create maps genetic diversity using moving window approach.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Sliding Window Maps of Genetic Diversity","text":"Install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"AnushaPB/wingen\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Sliding Window Maps of Genetic Diversity","text":"extended example check package vignette:","code":"library(wingen)  # load example data load_middle_earth_ex() ------------- middle earth example -------------   Objects loaded:  *lotr_vcf* vcfR object (100 loci x 100 samples)  *lotr_coords* dataframe with x and y coordinates  *lotr_lyr* middle earth RasterLayer (100 x 100)   ------------------------------------------------ # Run moving window calculations of pi with rarefaction wgd <- window_gd(lotr_vcf,           lotr_coords,           lotr_lyr,           stat = \"pi\",           wdim = 3,           fact = 5,           rarify = TRUE,           nloci = 1000)  # Krige results kgd <- krig_gd(wgd, lotr_lyr)  # Mask results mgd <- mask_gd(kgd, lotr_lyr, minval = 0.01)  # Plot results par(mfrow = c(1,4), oma = rep(2,4), mar = rep(2,4)) plot_gd(wgd, bkg = mgd,  main = \"Window pi\") plot_gd(kgd, main = \"Kriged pi\") plot_gd(mgd, main = \"Kriged & masked pi\") plot_count(wgd, main = \"Window counts\") vignette(\"wingen-vignette\")"},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 wingen authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/calc_mean_ar.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate mean allelic richness — calc_mean_ar","title":"Calculate mean allelic richness — calc_mean_ar","text":"Calculate mean allelic richness","code":""},{"path":"/reference/calc_mean_ar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate mean allelic richness — calc_mean_ar","text":"","code":"calc_mean_ar(genind)"},{"path":"/reference/calc_mean_ar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate mean allelic richness — calc_mean_ar","text":"genind genind","code":""},{"path":"/reference/calc_mean_ar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate mean allelic richness — calc_mean_ar","text":"allelic richness averaged across loci","code":""},{"path":"/reference/calc_mean_biar.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate mean allelic richness for biallelic data — calc_mean_biar","title":"Calculate mean allelic richness for biallelic data — calc_mean_biar","text":"Calculate mean allelic richness biallelic data","code":""},{"path":"/reference/calc_mean_biar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate mean allelic richness for biallelic data — calc_mean_biar","text":"","code":"calc_mean_biar(dos)"},{"path":"/reference/calc_mean_biar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate mean allelic richness for biallelic data — calc_mean_biar","text":"dos dosage matrix","code":""},{"path":"/reference/calc_mean_biar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate mean allelic richness for biallelic data — calc_mean_biar","text":"allelic richness averaged across loci","code":""},{"path":"/reference/calc_mean_het.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate mean heterozygosity — calc_mean_het","title":"Calculate mean heterozygosity — calc_mean_het","text":"Calculate mean heterozygosity","code":""},{"path":"/reference/calc_mean_het.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate mean heterozygosity — calc_mean_het","text":"","code":"calc_mean_het(hetmat)"},{"path":"/reference/calc_mean_het.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate mean heterozygosity — calc_mean_het","text":"hetmat matrix heterozygosity (0/FALSE = homozygote, 1/TRUE = heterozygote)","code":""},{"path":"/reference/calc_mean_het.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate mean heterozygosity — calc_mean_het","text":"heterozygosity averaged across individuals loci","code":""},{"path":"/reference/calc_pi.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate nucleotide diversity (pi) from dosage data — calc_pi","title":"Calculate nucleotide diversity (pi) from dosage data — calc_pi","text":"Wrapper pi.dosage function","code":""},{"path":"/reference/calc_pi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate nucleotide diversity (pi) from dosage data — calc_pi","text":"","code":"calc_pi(dos, nloci = NULL)"},{"path":"/reference/calc_pi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate nucleotide diversity (pi) from dosage data — calc_pi","text":"dos ni X nl dosage matrix containing number derived/alternate alleles individual carries SNP L length sequence (note: defaults number loci provided dosage matrix; TODO: COME BACK FIX )","code":""},{"path":"/reference/check_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check coordinate and genetic data — check_data","title":"Check coordinate and genetic data — check_data","text":"Check number individuals data set align","code":""},{"path":"/reference/check_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check coordinate and genetic data — check_data","text":"","code":"check_data(gen, coords)"},{"path":"/reference/check_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check coordinate and genetic data — check_data","text":"gen genetic data coords coordinates","code":""},{"path":"/reference/coords_to_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Create RasterLayer from coordinates — coords_to_raster","title":"Create RasterLayer from coordinates — coords_to_raster","text":"Create RasterLayer coordinates","code":""},{"path":"/reference/coords_to_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create RasterLayer from coordinates — coords_to_raster","text":"","code":"coords_to_raster(   coords,   buffer = 0,   res = NULL,   agg = NULL,   disagg = NULL,   plot = FALSE )"},{"path":"/reference/coords_to_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create RasterLayer from coordinates — coords_to_raster","text":"coords coordinates (two columns, first x second y) buffer buffer add edge raster (defaults 0) res desired resolution raster (defaults NULL). Can single value square cells vector two values representing x y resolutions. agg aggregation factor apply raster (defaults NULL) disagg disaggregation factor apply raster (defaults NULL) plot whether plot resulting raster coords (defaults FALSE)","code":""},{"path":"/reference/coords_to_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create RasterLayer from coordinates — coords_to_raster","text":"RasterLayer","code":""},{"path":"/reference/coords_to_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create RasterLayer from coordinates — coords_to_raster","text":"","code":"load_mini_ex() #>  #> ---------- mini middle earth example ---------- #>   #> Objects loaded:  #> *mini_vcf* vcfR object (10 loci x 10 samples)  #> *mini_coords* dataframe with x and y coordinates  #> *mini_lyr* middle earth RasterLayer (10 x 10)  #>  #> ----------------------------------------------- #>  coords_to_raster(mini_coords, buffer = 10, plot = TRUE) #> Error in mako(ncell(r)): could not find function \"mako\""},{"path":"/reference/get_adj.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get adjacent cells to a given cell index — get_adj","title":"Helper function to get adjacent cells to a given cell index — get_adj","text":"Helper function get adjacent cells given cell index","code":""},{"path":"/reference/get_adj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get adjacent cells to a given cell index — get_adj","text":"","code":"get_adj(i, r, n, coord_cells)"},{"path":"/reference/get_adj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get adjacent cells to a given cell index — get_adj","text":"cell index r RasterLayer n neighborhood matrix coord_cells cell numbers coordinates","code":""},{"path":"/reference/get_adj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get adjacent cells to a given cell index — get_adj","text":"indices coordinates adjacent given cell","code":""},{"path":"/reference/helper_calc_ar.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to calculate allelic richness — helper_calc_ar","title":"Helper function to calculate allelic richness — helper_calc_ar","text":"Helper function calculate allelic richness","code":""},{"path":"/reference/helper_calc_ar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to calculate allelic richness — helper_calc_ar","text":"","code":"helper_calc_ar(genind)"},{"path":"/reference/helper_calc_ar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to calculate allelic richness — helper_calc_ar","text":"genind","code":""},{"path":"/reference/helper_calc_biar.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to calculate allelic richness for a biallelic locus — helper_calc_biar","title":"Helper function to calculate allelic richness for a biallelic locus — helper_calc_biar","text":"Helper function calculate allelic richness biallelic locus","code":""},{"path":"/reference/helper_calc_biar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to calculate allelic richness for a biallelic locus — helper_calc_biar","text":"","code":"helper_calc_biar(loc)"},{"path":"/reference/helper_calc_biar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to calculate allelic richness for a biallelic locus — helper_calc_biar","text":"loc genotypes biallelic locus (must values 0, 1, 2)","code":""},{"path":"/reference/krig_gd.html","id":null,"dir":"Reference","previous_headings":"","what":"Raster interpolation using 'autoKrige' — krig_gd","title":"Raster interpolation using 'autoKrige' — krig_gd","text":"Raster interpolation using 'autoKrige'","code":""},{"path":"/reference/krig_gd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raster interpolation using 'autoKrige' — krig_gd","text":"","code":"krig_gd(   r,   grd = NULL,   indices = 1,   coords = NULL,   xy = FALSE,   resample = FALSE,   agg_grd = NULL,   disagg_grd = NULL,   agg_r = NULL,   disagg_r = NULL,   resample_first = TRUE,   n_cell = 10000 )"},{"path":"/reference/krig_gd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raster interpolation using 'autoKrige' — krig_gd","text":"r RasterLayer RasterStack grd object create grid kriging, can RasterLayer, SpatialPointsDataFrame, gridded object defined 'sp'. undefined, use r create grid. indices integer indices layers raster stack krige (defaults 1, .e. first layer) coords provided, kriging occur based values coordinates xy whether co-krige x y (~x+y) resample whether resample grd r. Set \"r\" resample r grd Set \"grd\" resample grd r (defaults FALSE) agg_grd factor use aggregation grd, provided (decrease resolution final kriged raster; defaults NULL) disagg_grd factor use disaggregation grd, provided (increase resolution final kriged raster; defaults NULL) agg_r factor use aggregation r, provided (decrease number points used kriging model; defaults NULL) disagg_r factor use disaggregation, r provided (increase number points used kriging model; defaults NULL) resample_first aggregation disaggregation used addition resampling, whether resample (resample_first = TRUE) (resample_first = FALSE) aggregation/disaggregation (defaults TRUE) n_cell number cells interpolate across SpatialPointsDataFrame provided grd","code":""},{"path":"/reference/krig_gd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raster interpolation using 'autoKrige' — krig_gd","text":"RasterLayer RasterStack","code":""},{"path":"/reference/krig_gd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raster interpolation using 'autoKrige' — krig_gd","text":"","code":"library(\"raster\") #> Warning: package 'raster' was built under R version 4.1.3 #> Loading required package: sp #> Warning: package 'sp' was built under R version 4.1.3 load_mini_ex() #>  #> ---------- mini middle earth example ---------- #>   #> Objects loaded:  #> *mini_vcf* vcfR object (10 loci x 10 samples)  #> *mini_coords* dataframe with x and y coordinates  #> *mini_lyr* middle earth RasterLayer (10 x 10)  #>  #> ----------------------------------------------- #>  wpi <- window_gd(mini_vcf, mini_coords, mini_lyr, nloci = 10, rarify = TRUE) #> Loading required namespace: adegenet kpi <- krig_gd(wpi, mini_lyr) #> [using ordinary kriging] #> Warning: NaNs produced plot_gd(kpi, main = \"Kriged Pi\")"},{"path":"/reference/krig_gd_lyr.html","id":null,"dir":"Reference","previous_headings":"","what":"Krige RasterLayer — krig_gd_lyr","title":"Krige RasterLayer — krig_gd_lyr","text":"Helper function krig_gd","code":""},{"path":"/reference/krig_gd_lyr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Krige RasterLayer — krig_gd_lyr","text":"","code":"krig_gd_lyr(   r,   grd = NULL,   coords = NULL,   xy = FALSE,   resample = FALSE,   agg_grd = NULL,   disagg_grd = NULL,   agg_r = NULL,   disagg_r = NULL,   resample_first = TRUE,   n_cell = 1000 )"},{"path":"/reference/krig_gd_lyr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Krige RasterLayer — krig_gd_lyr","text":"r raster kriging grd object create grid kriging, can RasterLayer, SpatialPointsDataFrame, gridded object defined 'sp'. undefined, use r create grid. coords provided, kriging occur based values coordinates xy whether co-krige x y (~x+y) resample whether resample grd r. Set \"r\" resample r grd Set \"grd\" resample grd r (defaults FALSE) agg_grd factor use aggregation grd, provided (decrease resolution final kriged raster; defaults NULL) disagg_grd factor use disaggregation grd, provided (increase resolution final kriged raster; defaults NULL) agg_r factor use aggregation r, provided (decrease number points used kriging model; defaults NULL) disagg_r factor use disaggregation, r provided (increase number points used kriging model; defaults NULL) resample_first aggregation disaggregation used addition resampling, whether resample (resample_first = TRUE) (resample_first = FALSE) aggregation/disaggregation (defaults TRUE) n_cell number cells interpolate across SpatialPointsDataFrame provided grd","code":""},{"path":"/reference/krig_gd_lyr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Krige RasterLayer — krig_gd_lyr","text":"RasterLayer","code":""},{"path":"/reference/load_middle_earth_ex.html","id":null,"dir":"Reference","previous_headings":"","what":"Load middle earth example — load_middle_earth_ex","title":"Load middle earth example — load_middle_earth_ex","text":"Loads middle earth example data assigns simple names","code":""},{"path":"/reference/load_middle_earth_ex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load middle earth example — load_middle_earth_ex","text":"","code":"load_middle_earth_ex()"},{"path":"/reference/load_middle_earth_ex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load middle earth example — load_middle_earth_ex","text":"three objects loaded (lotr_vcf, lotr_coords, lotr_lyrs)","code":""},{"path":"/reference/load_mini_ex.html","id":null,"dir":"Reference","previous_headings":"","what":"Load mini middle earth example — load_mini_ex","title":"Load mini middle earth example — load_mini_ex","text":"Loads mini middle earth example data assigns simple names","code":""},{"path":"/reference/load_mini_ex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load mini middle earth example — load_mini_ex","text":"","code":"load_mini_ex()"},{"path":"/reference/load_mini_ex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load mini middle earth example — load_mini_ex","text":"three objects assigned GlobalEnv (vcf, coords, lyr)","code":""},{"path":"/reference/lotr_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Middle earth example coordinates — lotr_coords","title":"Middle earth example coordinates — lotr_coords","text":"Middle earth example coordinates","code":""},{"path":"/reference/lotr_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Middle earth example coordinates — lotr_coords","text":"","code":"lotr_coords"},{"path":"/reference/lotr_coords.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Middle earth example coordinates — lotr_coords","text":"data frame 100 rows 2 columns x x coordinate y y coordinate","code":""},{"path":"/reference/lotr_lyr.html","id":null,"dir":"Reference","previous_headings":"","what":"Middle earth example raster — lotr_lyr","title":"Middle earth example raster — lotr_lyr","text":"RasterLayer middle earth CITE","code":""},{"path":"/reference/lotr_lyr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Middle earth example raster — lotr_lyr","text":"","code":"lotr_lyr"},{"path":"/reference/lotr_lyr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Middle earth example raster — lotr_lyr","text":"RasterLayer middle earth","code":""},{"path":"/reference/lotr_vcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Middle earth example vcf — lotr_vcf","title":"Middle earth example vcf — lotr_vcf","text":"Variant Call Format data set","code":""},{"path":"/reference/lotr_vcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Middle earth example vcf — lotr_vcf","text":"","code":"lotr_vcf"},{"path":"/reference/lotr_vcf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Middle earth example vcf — lotr_vcf","text":"Object class vcfR 100 individuals 1000 loci","code":""},{"path":"/reference/mask_gd.html","id":null,"dir":"Reference","previous_headings":"","what":"Mask genetic diversity map — mask_gd","title":"Mask genetic diversity map — mask_gd","text":"Mask genetic diversity map","code":""},{"path":"/reference/mask_gd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mask genetic diversity map — mask_gd","text":"","code":"mask_gd(x, mask, resample = \"mask\", minval = NULL, maxval = NULL)"},{"path":"/reference/mask_gd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mask genetic diversity map — mask_gd","text":"x Raster object mask mask Raster object Spatial object use mask resample x mask non matching rasters, layer resample match (defaults \"y\") minval mask Raster object, value mask mask maxval mask Raster object, value mask mask","code":""},{"path":"/reference/mask_gd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mask genetic diversity map — mask_gd","text":"RasterLayer","code":""},{"path":"/reference/mask_gd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mask genetic diversity map — mask_gd","text":"","code":"library(\"raster\") load_mini_ex() #>  #> ---------- mini middle earth example ---------- #>   #> Objects loaded:  #> *mini_vcf* vcfR object (10 loci x 10 samples)  #> *mini_coords* dataframe with x and y coordinates  #> *mini_lyr* middle earth RasterLayer (10 x 10)  #>  #> ----------------------------------------------- #>  wpi <- window_gd(mini_vcf, mini_coords, mini_lyr, nloci = 10, rarify = TRUE) kpi <- krig_gd(wpi, mini_lyr) #> [using ordinary kriging] #> Warning: NaNs produced mpi <- mask_gd(kpi, mini_lyr, minval = 0.01) plot_gd(mpi, main = \"Kriged and Masked Pi\")"},{"path":"/reference/middle_earth_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Middle earth example coordinates — middle_earth_coords","title":"Middle earth example coordinates — middle_earth_coords","text":"Middle earth example coordinates","code":""},{"path":"/reference/middle_earth_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Middle earth example coordinates — middle_earth_coords","text":"","code":"middle_earth_coords"},{"path":"/reference/middle_earth_coords.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Middle earth example coordinates — middle_earth_coords","text":"data frame 100 rows 2 columns x x coordinate y y coordinate","code":""},{"path":"/reference/middle_earth_lyr.html","id":null,"dir":"Reference","previous_headings":"","what":"Middle earth example raster — middle_earth_lyr","title":"Middle earth example raster — middle_earth_lyr","text":"RasterLayer middle earth CITE","code":""},{"path":"/reference/middle_earth_lyr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Middle earth example raster — middle_earth_lyr","text":"","code":"middle_earth_lyr"},{"path":"/reference/middle_earth_lyr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Middle earth example raster — middle_earth_lyr","text":"RasterLayer middle earth","code":""},{"path":"/reference/middle_earth_vcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Middle earth example vcf — middle_earth_vcf","title":"Middle earth example vcf — middle_earth_vcf","text":"Variant Call Format data set","code":""},{"path":"/reference/middle_earth_vcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Middle earth example vcf — middle_earth_vcf","text":"","code":"middle_earth_vcf"},{"path":"/reference/middle_earth_vcf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Middle earth example vcf — middle_earth_vcf","text":"Object class vcfR 100 individuals 1000 loci","code":""},{"path":"/reference/mini_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Mini middle earth example coordinates — mini_coords","title":"Mini middle earth example coordinates — mini_coords","text":"Mini middle earth example coordinates","code":""},{"path":"/reference/mini_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mini middle earth example coordinates — mini_coords","text":"","code":"mini_coords"},{"path":"/reference/mini_coords.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mini middle earth example coordinates — mini_coords","text":"data frame 10 rows 2 columns x x coordinate y y coordinate","code":""},{"path":"/reference/mini_lyr.html","id":null,"dir":"Reference","previous_headings":"","what":"Mini middle earth example raster — mini_lyr","title":"Mini middle earth example raster — mini_lyr","text":"RasterLayer middle earth CITE","code":""},{"path":"/reference/mini_lyr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mini middle earth example raster — mini_lyr","text":"","code":"mini_lyr"},{"path":"/reference/mini_lyr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mini middle earth example raster — mini_lyr","text":"RasterLayer middle earth","code":""},{"path":"/reference/mini_vcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Mini middle earth example vcf — mini_vcf","title":"Mini middle earth example vcf — mini_vcf","text":"Variant Call Format data set","code":""},{"path":"/reference/mini_vcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mini middle earth example vcf — mini_vcf","text":"","code":"mini_vcf"},{"path":"/reference/mini_vcf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mini middle earth example vcf — mini_vcf","text":"Object class vcfR 10 individuals 10 loci","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/plot_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot sample counts — plot_count","title":"Plot sample counts — plot_count","text":"Plot sample counts","code":""},{"path":"/reference/plot_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot sample counts — plot_count","text":"","code":"plot_count(   x,   index = 2,   breaks = 10,   col = viridis::mako(breaks),   zlim = NULL,   main = NULL,   legend = TRUE,   legend.width = 1,   axis.args = list(cex.axis = 1) )"},{"path":"/reference/plot_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot sample counts — plot_count","text":"x RasterLayer counts RasterStack indexed layer sample counts index RasterStack provided, index sample count layer plot (assumes stacked output window_gd defaults 2) breaks number breaks use color scale (defaults 10) col color pallete use plotting (defaults viridis::magma pallete) zlim limits color scale values main character. Main plot title","code":""},{"path":"/reference/plot_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot sample counts — plot_count","text":"plot sample counts","code":""},{"path":"/reference/plot_gd.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot genetic diversity results — plot_gd","title":"Plot genetic diversity results — plot_gd","text":"Plot genetic diversity results","code":""},{"path":"/reference/plot_gd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot genetic diversity results — plot_gd","text":"","code":"plot_gd(   x,   bkg = NULL,   index = 1,   col = viridis::magma(breaks),   breaks = 10,   zlim = NULL,   main = NULL,   legend = TRUE,   legend.width = 1,   axis.args = list(cex.axis = 1) )"},{"path":"/reference/plot_gd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot genetic diversity results — plot_gd","text":"x output window_gd krig_gd (RasterStack first layer genetic diversity) bkg RasterLayer spatial object plotted \"background\" gray index RasterStack provided, index sample count layer plot (defaults 1) col color pallete use plotting (defaults viridis::magma pallete) breaks number breaks use color scale (defaults 10) zlim limits color scale values main character. Main plot title","code":""},{"path":"/reference/plot_gd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot genetic diversity results — plot_gd","text":"plot genetic diversity","code":""},{"path":"/reference/preview_gd.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate preview of moving window and sample counts — preview_gd","title":"Generate preview of moving window and sample counts — preview_gd","text":"Generate preview moving window sample counts","code":""},{"path":"/reference/preview_gd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate preview of moving window and sample counts — preview_gd","text":"","code":"preview_gd(lyr, coords, wdim, fact = 0, sample_count = TRUE, min_n = 0)"},{"path":"/reference/preview_gd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate preview of moving window and sample counts — preview_gd","text":"lyr RasterLayer slide window across coords coordinates (two columns, first x second y) wdim dimensions (height x width) window, one value provided square window created fact aggregation factor apply RasterLayer (note: increasing value reduces computational time) sample_count whether create plot sample counts cell (defaults TRUE) min_n min number samples use calculations (focal cell window containing less number samples assigned value NA)","code":""},{"path":"/reference/preview_gd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate preview of moving window and sample counts — preview_gd","text":"plots example window sample counts (sample_count = TRUE)","code":""},{"path":"/reference/rarify_gd.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to rarify subsample and calculate genetic diversity — rarify_gd","title":"Helper function to rarify subsample and calculate genetic diversity — rarify_gd","text":"Helper function rarify subsample calculate genetic diversity","code":""},{"path":"/reference/rarify_gd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to rarify subsample and calculate genetic diversity — rarify_gd","text":"","code":"rarify_gd(gen, sub, rarify_nit = 10, rarify_n = 4, stat, fun, nloci = NULL)"},{"path":"/reference/rarify_gd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to rarify subsample and calculate genetic diversity — rarify_gd","text":"gen genetic data (note: order matters! coordinate genetic data order, currently checks .) rarify_nit rarify = TRUE, number iterations use rarefaction rarify_n rarify = TRUE, number points use rarefaction stat function calculate genetic diversity (can either calc_mean_arcalc_pi, calc_mean_biar, calc_mean_het) fun function use summarize data window (defaults base R mean) nloci calculating pi, nloci=NULL (default), returns sum SNPs nucleotide diversity; otherwise return average nucleotide diversity per nucleotide given length nloci sequence (L argument pi.dosage function)","code":""},{"path":"/reference/rarify_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Rarefaction helper function — rarify_helper","title":"Rarefaction helper function — rarify_helper","text":"Rarefaction helper function","code":""},{"path":"/reference/rarify_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rarefaction helper function — rarify_helper","text":"","code":"rarify_helper(gen, sub, rarify_n, rarify_nit, stat, fun = mean, nloci = NULL)"},{"path":"/reference/rarify_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rarefaction helper function — rarify_helper","text":"gen genetic data (note: order matters! coordinate genetic data order, currently checks .) rarify_n rarify = TRUE, number points use rarefaction rarify_nit rarify = TRUE, number iterations use rarefaction stat function calculate genetic diversity (can either calc_mean_arcalc_pi, calc_mean_biar, calc_mean_het) fun function use summarize data window (defaults base R mean) nloci calculating pi, nloci=NULL (default), returns sum SNPs nucleotide diversity; otherwise return average nucleotide diversity per nucleotide given length nloci sequence (L argument pi.dosage function)","code":""},{"path":"/reference/raster_to_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Conver a raster to a grid — raster_to_grid","title":"Conver a raster to a grid — raster_to_grid","text":"Conver raster grid","code":""},{"path":"/reference/raster_to_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conver a raster to a grid — raster_to_grid","text":"","code":"raster_to_grid(x)"},{"path":"/reference/raster_to_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conver a raster to a grid — raster_to_grid","text":"x RasterLayer","code":""},{"path":"/reference/raster_to_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conver a raster to a grid — raster_to_grid","text":"gridded SpatialPixelsDataFrame","code":""},{"path":"/reference/raster_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform raster — raster_transform","title":"Transform raster — raster_transform","text":"Transform raster","code":""},{"path":"/reference/raster_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform raster — raster_transform","text":"","code":"raster_transform(   r,   grd,   resample = FALSE,   agg_grd = NULL,   disagg_grd = NULL,   agg_r = NULL,   disagg_r = NULL,   resample_first = TRUE )"},{"path":"/reference/raster_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform raster — raster_transform","text":"r RasterLayer RasterStack grd object create grid kriging, can RasterLayer, SpatialPointsDataFrame, gridded object defined 'sp'. undefined, use r create grid. resample whether resample grd r. Set \"r\" resample r grd Set \"grd\" resample grd r (defaults FALSE) agg_grd factor use aggregation grd, provided (decrease resolution final kriged raster; defaults NULL) disagg_grd factor use disaggregation grd, provided (increase resolution final kriged raster; defaults NULL) agg_r factor use aggregation r, provided (decrease number points used kriging model; defaults NULL) disagg_r factor use disaggregation, r provided (increase number points used kriging model; defaults NULL) resample_first aggregation disaggregation used addition resampling, whether resample (resample_first = TRUE) (resample_first = FALSE) aggregation/disaggregation (defaults TRUE)","code":""},{"path":"/reference/raster_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform raster — raster_transform","text":"stack transformed rasters","code":""},{"path":"/reference/sample_gd.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to calculate genetic diversity of a sample — sample_gd","title":"Helper function to calculate genetic diversity of a sample — sample_gd","text":"Helper function calculate genetic diversity sample","code":""},{"path":"/reference/sample_gd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to calculate genetic diversity of a sample — sample_gd","text":"","code":"sample_gd(gen, sub, stat, nloci = NULL)"},{"path":"/reference/sample_gd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to calculate genetic diversity of a sample — sample_gd","text":"gen genetic data (note: order matters! coordinate genetic data order, currently checks .) stat function calculate genetic diversity (can either calc_mean_arcalc_pi, calc_mean_biar, calc_mean_het) nloci calculating pi, nloci=NULL (default), returns sum SNPs nucleotide diversity; otherwise return average nucleotide diversity per nucleotide given length nloci sequence (L argument pi.dosage function)","code":""},{"path":"/reference/sample_gd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to calculate genetic diversity of a sample — sample_gd","text":"mean allelic richness subsample","code":""},{"path":"/reference/spdf_to_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Make grid from Spatial Points Data Frame — spdf_to_grid","title":"Make grid from Spatial Points Data Frame — spdf_to_grid","text":"Make grid Spatial Points Data Frame","code":""},{"path":"/reference/spdf_to_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make grid from Spatial Points Data Frame — spdf_to_grid","text":"","code":"spdf_to_grid(spdf, n_cell = 1000)"},{"path":"/reference/spdf_to_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make grid from Spatial Points Data Frame — spdf_to_grid","text":"spdf Spatial Points Dataframe create grid kriging n_cell number grid cells use kriging","code":""},{"path":"/reference/spdf_to_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make grid from Spatial Points Data Frame — spdf_to_grid","text":"gridded SpatialPixelsDataFrame","code":""},{"path":"/reference/spdf_to_grid.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Make grid from Spatial Points Data Frame — spdf_to_grid","text":"code : https://stackoverflow.com/questions/43436466/create-grid--r--kriging--gstat","code":""},{"path":"/reference/vcf_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is a vcf or a path to a vcf — vcf_check","title":"Check if an object is a vcf or a path to a vcf — vcf_check","text":"Check object vcf path vcf","code":""},{"path":"/reference/vcf_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is a vcf or a path to a vcf — vcf_check","text":"","code":"vcf_check(x)"},{"path":"/reference/vcf_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is a vcf or a path to a vcf — vcf_check","text":"x vcfR object path vcf","code":""},{"path":"/reference/vcf_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is a vcf or a path to a vcf — vcf_check","text":"vcf object","code":""},{"path":"/reference/vcf_to_dosage.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert vcf to dosage matrix — vcf_to_dosage","title":"Convert vcf to dosage matrix — vcf_to_dosage","text":"Convert vcf dosage matrix","code":""},{"path":"/reference/vcf_to_dosage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert vcf to dosage matrix — vcf_to_dosage","text":"","code":"vcf_to_dosage(x)"},{"path":"/reference/vcf_to_dosage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert vcf to dosage matrix — vcf_to_dosage","text":"x can either object class 'vcfR' path .vcf file","code":""},{"path":"/reference/vcf_to_dosage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert vcf to dosage matrix — vcf_to_dosage","text":"returns dosage matrix","code":""},{"path":"/reference/vcf_to_dosage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert vcf to dosage matrix — vcf_to_dosage","text":"","code":"data(\"mini_vcf\") vcf_to_dosage(mini_vcf) #>        0_113689 0_61080 0_44227 0_71596 0_30648 0_14183 0_109874 0_56633 #> 351766        0       0       0       0       0       2        0       1 #> 350702        0       0       0       0       0       2        0       2 #> 353271        0       0       0       0       2       2        0       2 #> 353152        0       1       0       0       0       2        0       2 #> 353382        0       1       0       0       0       2        0       2 #> 353262        0       2       0       2       2       2        0       2 #> 351987        0       2       0       0       0       2        0       2 #> 347023        0       0       0       0       2       2        0       2 #> 353234        0       2       0       0       0       2        0       2 #> 353497        0       1       0       1       2       2        1       2 #>        0_10656 0_84757 #> 351766       2       0 #> 350702       0       2 #> 353271       0       0 #> 353152       1       1 #> 353382       0       2 #> 353262       2       2 #> 351987       2       0 #> 347023       1       2 #> 353234       1       1 #> 353497       0       1"},{"path":"/reference/vcf_to_genind.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for vcfR2genind function that assigns pops — vcf_to_genind","title":"Wrapper for vcfR2genind function that assigns pops — vcf_to_genind","text":"Wrapper vcfR2genind function assigns pops","code":""},{"path":"/reference/vcf_to_genind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for vcfR2genind function that assigns pops — vcf_to_genind","text":"","code":"vcf_to_genind(x, pops = NULL)"},{"path":"/reference/vcf_to_genind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for vcfR2genind function that assigns pops — vcf_to_genind","text":"x can either object class 'vcfR' path .vcf file pops NULL (default), pops detected vcf, individual assigned pop. FALSE genind$pop left NULL. Alternatively, vector population assignments individual can provided","code":""},{"path":"/reference/vcf_to_genind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper for vcfR2genind function that assigns pops — vcf_to_genind","text":"returns genind object","code":""},{"path":"/reference/vcf_to_genind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper for vcfR2genind function that assigns pops — vcf_to_genind","text":"","code":"data(\"mini_vcf\") vcf_to_genind(mini_vcf) #> Warning: no pops were provided, assigning a pop to each individual (to stop this, set pops = FALSE) #> /// GENIND OBJECT ///////// #>  #>  // 10 individuals; 10 loci; 17 alleles; size: 11.8 Kb #>  #>  // Basic content #>    @tab:  10 x 17 matrix of allele counts #>    @loc.n.all: number of alleles per locus (range: 1-2) #>    @loc.fac: locus factor for the 17 columns of @tab #>    @all.names: list of allele names for each locus #>    @ploidy: ploidy of each individual  (range: 2-2) #>    @type:  codom #>    @call: adegenet::df2genind(X = t(x), sep = sep) #>  #>  // Optional content #>    @pop: population of each individual (group size range: 1-1)"},{"path":"/reference/wdim_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to check that wdim object is correctly assigned — wdim_check","title":"Helper function to check that wdim object is correctly assigned — wdim_check","text":"Helper function check wdim object correctly assigned","code":""},{"path":"/reference/wdim_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to check that wdim object is correctly assigned — wdim_check","text":"","code":"wdim_check(wdim)"},{"path":"/reference/wdim_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to check that wdim object is correctly assigned — wdim_check","text":"wdim dimensions (height x width) window, one value provided square window created","code":""},{"path":"/reference/wdim_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to check that wdim object is correctly assigned — wdim_check","text":"corrected wdim","code":""},{"path":"/reference/wdim_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to check that wdim object is correctly assigned — wdim_check","text":"","code":"wdim_check(c(4,4)) #> Warning: wdim must be odd, using wdim[1] = 5 instead #> Warning: wdim must be odd, using wdim[2] = 5 instead #> [1] 5 5 wdim_check(4) #> Warning: wdim must be odd, using wdim = 5 instead #> [1] 5"},{"path":"/reference/wdim_to_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to convert wdim object to neighbor matrix — wdim_to_mat","title":"Helper function to convert wdim object to neighbor matrix — wdim_to_mat","text":"Helper function convert wdim object neighbor matrix","code":""},{"path":"/reference/wdim_to_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to convert wdim object to neighbor matrix — wdim_to_mat","text":"","code":"wdim_to_mat(wdim)"},{"path":"/reference/wdim_to_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to convert wdim object to neighbor matrix — wdim_to_mat","text":"wdim dimensions (height x width) window, one value provided square window created","code":""},{"path":"/reference/wdim_to_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to convert wdim object to neighbor matrix — wdim_to_mat","text":"neighborhood matrix","code":""},{"path":"/reference/wdim_to_mat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to convert wdim object to neighbor matrix — wdim_to_mat","text":"","code":"wdim_to_mat(3) #>      [,1] [,2] [,3] #> [1,]    1    1    1 #> [2,]    1    0    1 #> [3,]    1    1    1 wdim_to_mat(c(3,5)) #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    1    1    1    1    1 #> [2,]    1    1    0    1    1 #> [3,]    1    1    1    1    1"},{"path":"/reference/window_gd.html","id":null,"dir":"Reference","previous_headings":"","what":"Sliding window map of genetic diversity — window_gd","title":"Sliding window map of genetic diversity — window_gd","text":"Sliding window map genetic diversity","code":""},{"path":"/reference/window_gd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sliding window map of genetic diversity — window_gd","text":"","code":"window_gd(   vcf,   coords,   lyr,   stat = \"pi\",   wdim = 5,   fact = 0,   rarify = FALSE,   rarify_n = 4,   rarify_nit = 5,   min_n = 2,   fun = mean,   parallel = FALSE,   nloci = NULL )"},{"path":"/reference/window_gd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sliding window map of genetic diversity — window_gd","text":"vcf object type vcf ( (note: order matters! coordinate genetic data order, currently checks .)) coords coordinates (two columns, first x second y order genetic data), lyr RasterLayer slide window across stat genetic diversity stat calculate (can either \"pi\" nucleotide diversity, \"het\" average heterozygosity across loci, \"allelic.richness\" average allelic richness across loci, \"biallelic.richness\" get average allelic richness across loci biallelic dataset (option faster \"allelic.richness\")) wdim dimensions (height x width) window, one value provided square window created fact aggregation factor apply RasterLayer (note: increasing value reduces computational time) rarify rarify = TRUE, rarefaction performed rarify_n rarify = TRUE, number points use rarefaction rarify_nit rarify = TRUE, number iterations use rarefaction min_n min number samples use calculations (focal cell window containing less number samples assigned value NA; equal rarify_n rarify = TRUE, otherwise defaults 2) fun function use summarize data window (defaults base R mean) parallel whether parallelize function (see vignette setting cluster ) nloci calculating pi, nloci=NULL (default), returns sum SNPs nucleotide diversity; otherwise return average nucleotide diversity per nucleotide given length nloci sequence (L argument pi.dosage function)","code":""},{"path":"/reference/window_gd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sliding window map of genetic diversity — window_gd","text":"RasterStack includes raster genetic diversity raster number samples within window cell","code":""},{"path":"/reference/window_gd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sliding window map of genetic diversity — window_gd","text":"","code":"library(\"raster\") load_mini_ex() #>  #> ---------- mini middle earth example ---------- #>   #> Objects loaded:  #> *mini_vcf* vcfR object (10 loci x 10 samples)  #> *mini_coords* dataframe with x and y coordinates  #> *mini_lyr* middle earth RasterLayer (10 x 10)  #>  #> ----------------------------------------------- #>  wpi <- window_gd(mini_vcf, mini_coords, mini_lyr, nloci = 10, rarify = TRUE) plot_gd(wpi, main = \"Window pi\")  plot_count(wpi)"},{"path":"/reference/window_gd_general.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for window_gd — window_gd_general","title":"Helper function for window_gd — window_gd_general","text":"Helper function window_gd","code":""},{"path":"/reference/window_gd_general.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for window_gd — window_gd_general","text":"","code":"window_gd_general(   gen,   coords,   lyr,   stat = calc_mean_ar,   wdim = 3,   fact = 0,   rarify = FALSE,   rarify_n = 2,   rarify_nit = 10,   min_n = 2,   fun = mean,   parallel = FALSE,   nloci = NULL )"},{"path":"/reference/window_gd_general.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for window_gd — window_gd_general","text":"gen genetic data (note: order matters! coordinate genetic data order, currently checks .) coords coordinates (two columns, first x second y order genetic data), lyr RasterLayer slide window across stat function calculate genetic diversity (can either calc_mean_arcalc_pi, calc_mean_biar, calc_mean_het) wdim dimensions (height x width) window, one value provided square window created fact aggregation factor apply RasterLayer (note: increasing value reduces computational time) rarify rarify = TRUE, rarefaction performed rarify_n rarify = TRUE, number points use rarefaction rarify_nit rarify = TRUE, number iterations use rarefaction min_n min number samples use calculations (focal cell window containing less number samples assigned value NA; equal rarify_n rarify = TRUE, otherwise defaults 2) fun function use summarize data window (defaults base R mean) parallel whether parallelize function (see vignette setting cluster ) nloci calculating pi, nloci=NULL (default), returns sum SNPs nucleotide diversity; otherwise return average nucleotide diversity per nucleotide given length nloci sequence (L argument pi.dosage function)","code":""},{"path":"/reference/window_gd_general.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for window_gd — window_gd_general","text":"RasterStack includes raster genetic diversity raster number samples within window cell","code":""},{"path":"/reference/window_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for window calculations — window_helper","title":"Helper function for window calculations — window_helper","text":"Helper function window calculations","code":""},{"path":"/reference/window_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for window calculations — window_helper","text":"","code":"window_helper(   i,   lyr,   gen,   coord_cells,   nmat,   stat,   rarify,   rarify_n,   rarify_nit,   min_n,   fun,   nloci = NULL )"},{"path":"/reference/window_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for window calculations — window_helper","text":"cell index lyr RasterLayer slide window across gen genetic data (note: order matters! coordinate genetic data order, currently checks .) coord_cells cell indices coordinate nmat neighborhood matrix stat function calculate genetic diversity (can either calc_mean_arcalc_pi, calc_mean_biar, calc_mean_het) rarify rarify = TRUE, rarefaction performed rarify_n rarify = TRUE, number points use rarefaction rarify_nit rarify = TRUE, number iterations use rarefaction min_n min number samples use calculations (focal cell window containing less number samples assigned value NA; equal rarify_n rarify = TRUE, otherwise defaults 2) fun function use summarize data window (defaults base R mean) nloci calculating pi, nloci=NULL (default), returns sum SNPs nucleotide diversity; otherwise return average nucleotide diversity per nucleotide given length nloci sequence (L argument pi.dosage function)","code":""},{"path":"/reference/wingen-package.html","id":null,"dir":"Reference","previous_headings":"","what":"wingen: Sliding Window Maps of Genetic Diversity — wingen-package","title":"wingen: Sliding Window Maps of Genetic Diversity — wingen-package","text":"Visualize genetic diversity across space using sliding window approach options rarefaction interpolation.","code":""},{"path":"/reference/wingen-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"wingen: Sliding Window Maps of Genetic Diversity — wingen-package","text":"Maintainer: Anusha Bishop anusha.bishop@berkeley.edu (ORCID) Authors: Anne Chambers (ORCID) Ian Wang ianwang@berkeley.edu (ORCID)","code":""}]
